{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullStack-\\\\client\\\\src\\\\component\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  // Fetch the data when the component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/api/example') // Replace with your backend URL\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setMessage(data.message); // Store the message from the backend\n      setLoading(false); // Turn off the loading state\n    }).catch(error => {\n      setError(error.message); // Set any error if something goes wrong\n      setLoading(false); // Turn off the loading state\n    });\n  }, []); // Empty array means this will run only once when the component mounts\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      children: isSignUp ? 'Already have an account? Sign In' : 'Don’t have an account? Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: Yup.object({\n          email: Yup.string().email('Invalid email address').required('Required'),\n          password: Yup.string().min(6, 'Must be at least 6 characters').required('Required')\n        }),\n        onSubmit: values => {\n          console.log(values);\n          // Add your form submission logic here\n        },\n        children: ({\n          handleSubmit,\n          handleChange,\n          values,\n          touched,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"form-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Email\",\n                onChange: handleChange,\n                value: values.email,\n                className: touched.email && errors.email ? 'input-error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), touched.email && errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"errors\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 52\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Password\",\n                onChange: handleChange,\n                value: values.password,\n                className: touched.password && errors.password ? 'input-error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), touched.password && errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 58\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button\",\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"kc/GmAzOWuzUjIMKwDkjrMJA7AQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Formik","Yup","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","message","setMessage","loading","setLoading","error","setError","isSignUp","setIsSignUp","fetch","then","response","ok","Error","json","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","initialValues","email","password","validationSchema","object","string","required","min","onSubmit","values","console","log","handleSubmit","handleChange","touched","errors","type","name","placeholder","onChange","value","_c","$RefreshReg$"],"sources":["E:/fullStack-/client/src/component/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Formik, FormikHelpers, FormikValues } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n  // Fetch the data when the component mounts\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/example') // Replace with your backend URL\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setMessage(data.message); // Store the message from the backend\r\n        setLoading(false); // Turn off the loading state\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message); // Set any error if something goes wrong\r\n        setLoading(false); // Turn off the loading state\r\n      });\r\n  }, []); // Empty array means this will run only once when the component mounts\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className='container'>\r\n      <p>{message}</p> {/* Display the message from the backend */}\r\n      <button className='button'>\r\n      {isSignUp ? 'Already have an account? Sign In' : 'Don’t have an account? Sign Up'}\r\n      </button>\r\n      <div className='form-container'>\r\n        <Formik \r\n       initialValues={{ email: '', password: '' }}\r\n       validationSchema={Yup.object({\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n        password: Yup.string().min(6, 'Must be at least 6 characters').required('Required'),\r\n    })}\r\n    onSubmit={(values) => {\r\n        console.log(values);\r\n        // Add your form submission logic here\r\n      }}\r\n        >\r\n               {({ handleSubmit, handleChange, values, touched, errors }) => (\r\n                <>\r\n                <form onSubmit={handleSubmit} className=\"form-container\">\r\n                <div className=\"form-field\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    className={touched.email && errors.email ? 'input-error' : ''}\r\n                  />\r\n                  {touched.email && errors.email ? <div className='errors'>{errors.email}</div> : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                    className={touched.password && errors.password ? 'input-error' : ''}\r\n                  />\r\n                  {touched.password && errors.password ? <div className=\"error\">{errors.password}</div> : null}\r\n                </div>\r\n                <button type=\"submit\" className=\"button\">Sign In</button>\r\n              </form>\r\n                <div>Don't have an account? <button className=\"button\">Sign Up</button></div>\r\n                </>\r\n           )}\r\n       </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}