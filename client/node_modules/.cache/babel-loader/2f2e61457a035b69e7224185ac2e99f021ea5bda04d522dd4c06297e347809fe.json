{"ast":null,"code":"var _jsxFileName = \"E:\\\\fullStack-\\\\client\\\\src\\\\component\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  // Fetch the data when the component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/api/example') // Replace with your backend URL\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setMessage(data.message); // Store the message from the backend\n      setLoading(false); // Turn off the loading state\n    }).catch(error => {\n      setError(error.message); // Set any error if something goes wrong\n      setLoading(false); // Turn off the loading state\n    });\n  }, []); // Empty array means this will run only once when the component mounts\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: Yup.object({\n          email: Yup.string().email('Invalid email address').required('Required'),\n          password: Yup.string().min(6, 'Must be at least 6 characters').required('Required')\n        }),\n        onSubmit: values => {\n          console.log(values);\n          // Add your form submission logic here\n        },\n        children: ({\n          handleSubmit,\n          handleChange,\n          values,\n          touched,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              onChange: handleChange,\n              value: values.email,\n              className: touched.email && errors.email ? 'input-error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this), touched.email && errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"errors\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 56\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              onChange: handleChange,\n              value: values.password,\n              className: touched.password && errors.password ? 'input-error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), touched.password && errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 64\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            children: isSignUp ? 'Sign Up' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"kc/GmAzOWuzUjIMKwDkjrMJA7AQ=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Formik","Yup","jsxDEV","_jsxDEV","Home","_s","message","setMessage","loading","setLoading","error","setError","isSignUp","setIsSignUp","fetch","then","response","ok","Error","json","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","initialValues","email","password","validationSchema","object","string","required","min","onSubmit","values","console","log","handleSubmit","handleChange","touched","errors","htmlFor","type","id","name","onChange","value","_c","$RefreshReg$"],"sources":["E:/fullStack-/client/src/component/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Formik, FormikHelpers, FormikValues } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n  // Fetch the data when the component mounts\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/example') // Replace with your backend URL\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setMessage(data.message); // Store the message from the backend\r\n        setLoading(false); // Turn off the loading state\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message); // Set any error if something goes wrong\r\n        setLoading(false); // Turn off the loading state\r\n      });\r\n  }, []); // Empty array means this will run only once when the component mounts\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <div className='container'>\r\n      <p>{message}</p> {/* Display the message from the backend */}\r\n      <button className='button'>\r\n\r\n      </button>\r\n      <div className='form-container'>\r\n        <Formik \r\n       initialValues={{ email: '', password: '' }}\r\n       validationSchema={Yup.object({\r\n        email: Yup.string().email('Invalid email address').required('Required'),\r\n        password: Yup.string().min(6, 'Must be at least 6 characters').required('Required'),\r\n    })}\r\n    onSubmit={(values) => {\r\n        console.log(values);\r\n        // Add your form submission logic here\r\n      }}\r\n        >\r\n               {({ handleSubmit, handleChange, values, touched, errors }) => (\r\n                <form onSubmit={handleSubmit} className='form'>\r\n                    <div className='form-field'>\r\n                        <label htmlFor='email'>Email  </label>\r\n                        <input \r\n                        type='email'\r\n                        id='email'\r\n                        name='email'\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        className={touched.email && errors.email ? 'input-error' : ''}>\r\n                        </input>\r\n                      {touched.email && errors.email ? <div className='errors'>{errors.email}</div> : null}\r\n                    </div>\r\n\r\n                    <div className=\"form-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            onChange={handleChange}\r\n                            value={values.password}\r\n                            className={touched.password && errors.password ? 'input-error' : ''}\r\n                        />\r\n                        {touched.password && errors.password ? <div className=\"error\">{errors.password}</div> : null}\r\n                    </div>\r\n                    <button type=\"submit\" className=\"button\">{isSignUp ? 'Sign Up' : 'Sign In'}</button>\r\n                </form>\r\n           )}\r\n       </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}